---
swagger: "2.0"
info:
  description: "The CryptoWeather API allows for access to all of the cryptocurrency\
    \ data and market forecast services provided. There are two primary categories\
    \ of routes, `public` and `private`, where `public` routes are accessible to the\
    \ general public and do not require API authentication, and `private` routes,\
    \ which require API authentication.\n\n## General Overview\n\n1. All API methods\
    \ adhere to RESTful best practices as closely as possible. As such, all API calls\
    \ will be made via the standard HTTP protocol using the GET/POST/PUT/DELETE request\
    \ types.\n\n2. Every request returns the status as a JSON response with the following:\n\
    \    - success, true if it was successful\n    - code, the http status code (also\
    \ in the response header)\n        - 200 if response is successful\n        -\
    \ 400 if bad request\n        - 401 if authorization JWT is wrong or limit exceeded\n\
    \        - 404 wrong route\n        - 500 for any internal errors\n    - status,\
    \ the status of the request, default **success**\n    - errors, an array of any\
    \ relevant error details\n\n3. For any requests that are not successful an error\
    \ message is specified and returned as an array for the **errors** key in the\
    \ JSON response.\n\n4. All authentication uses JSON Web Tokens (JWT), which is\
    \ set as the **Authorization** entry in the header, see the following for more\
    \ details.\n    - http://jwt.io\n    - https://scotch.io/tutorials/the-anatomy-of-a-json-web-token\n\
    \n## Code Example\n\nThe following is a code example in Python, which demonstrates\
    \ using the [Python Requests library](https://requests.readthedocs.io/en/master/)\
    \ for both the `public` and `private` API routes.\n\n```\nimport requests\n\n\
    HOST = \"https://api.cryptoweather.ai/v1\"\n\n# Your API key (JWT)\nAPI_KEY =\
    \ \"<YOUR API KEY>\"\n\n# Example public request, no API key required.\nrequests.get(\"\
    {}/public/symbols\".format(HOST)).json()\n\n# Get the current btc price using\
    \ the public route\nrequests.get(\"{}/public/price-current/{}\".format(HOST, \"\
    btc\")).json()\n\n\n# Example private request, API key required. Get the btc hourly\
    \ forecasts\nheaders = {\"Authorization\": \"Bearer {}\".format(API_KEY)}\nrequests.get(\"\
    {}/private/forecast/{}/{}\".format(HOST, \"btc\", \"1h\"),\n             headers=headers).json()\n\
    ```"
  version: ""
  title: "CryptoWeather"
host: "api.cryptoweather.ai"
basePath: "/"
tags:
- name: "Public"
- name: "Private"
schemes:
- "https"
paths:
  /v1/public/symbols:
    get:
      tags:
      - "Public"
      summary: "Symbols"
      description: ""
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                symbols:
                - symbol: "btc"
                  name: "Bitcoin"
                - symbol: "eth"
                  name: "Ethereum"
                - symbol: "ltc"
                  name: "Litecoin"
                - symbol: "eos"
                  name: "EOS"
                - symbol: "xrp"
                  name: "Ripple"
          headers: {}
          schema:
            $ref: "#/definitions/Public Symbols Response"
  /v1/public/price-current/{symbol}:
    get:
      tags:
      - "Public"
      summary: "Price Current"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol, provide `all` to get every symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                current:
                - symbol: "btc"
                  name: "Bitcoin"
                  price: 6621.12
                  change_usd: -320.05
                  change_pct: -5.23
                - symbol: "eth"
                  name: "Ethereum"
                  price: 221.12
                  change_usd: -30.05
                  change_pct: -2.23
          headers: {}
          schema:
            $ref: "#/definitions/Public Price Current Response"
        "400":
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
  /v1/public/price-change/{symbol}:
    get:
      tags:
      - "Public"
      summary: "Price Change"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                price_change:
                - interval: "01:00:00"
                  change_pct: -0.15
                  change_usd: -15
                - interval: "04:00:00"
                  change_pct: 0.61
                  change_usd: 60.9
                - interval: "24:00:00"
                  change_pct: 4.07
                  change_usd: 392
                - interval: "72:00:00"
                  change_pct: 5.02
                  change_usd: 479.05
                - interval: "168:00:00"
                  change_pct: 4.06
                  change_usd: 391.1
                - interval: "720:00:00"
                  change_pct: -3.17
                  change_usd: -328
          headers: {}
          schema:
            $ref: "#/definitions/Public Price Change Response"
        "400":
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
  /v1/public/price-history/{symbol}/{period}/{interval}:
    get:
      tags:
      - "Public"
      summary: "Price History"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol, provide `all` to get every symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      - name: "period"
        in: "path"
        description: "The period to get data for, such as past 30 days."
        required: true
        type: "string"
        x-example: "30d"
        x-exportParamName: "Period"
      - name: "interval"
        in: "path"
        description: "The bar interval, such as 1 day."
        required: true
        type: "string"
        x-example: "1d"
        x-exportParamName: "Interval"
      responses:
        "200":
          description: "OK"
          examples: {}
          headers: {}
          schema:
            $ref: "#/definitions/Public Price History Response"
        "400":
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
  /v1/public/trend/{symbol}:
    get:
      tags:
      - "Public"
      summary: "Trend"
      description: "The trend response contains a collection of forecasts for different\
        \ intervals with the following attributes.\n\n+ `time_start` start time of\
        \ the period the forecast is applicable for\n\n+ `time_end` end time of the\
        \ period the forecast is applicable for\n\n+ `interval` interval in hours\
        \ that the forecast is applicable for\n\n+ `weighted_price` forecasted weighted\
        \ price during the period\n\n+ `change_pct` percent change in price for forecasted\
        \ weighted_price relative to current price\n\n+ `change_usd` dollar change\
        \ in price for forecasted weighted_price relative to current price"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                trend:
                - time_start: 1568822400
                  time_end: 1568826000
                  interval: "01:00:00"
                  change_pct: -0.11
                  change_usd: -11.34
                  weighted_price: 10193.64
                - time_start: 1568822400
                  time_end: 1568836800
                  interval: "04:00:00"
                  change_pct: 0.17
                  change_usd: 17.85
                  weighted_price: 10222.83
                - time_start: 1568808000
                  time_end: 1568851200
                  interval: "12:00:00"
                  change_pct: -0.36
                  change_usd: -36.19
                  weighted_price: 10148.81
          headers: {}
          schema:
            $ref: "#/definitions/Public Trend Response"
        "400":
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
  /v1/public/summary:
    get:
      tags:
      - "Public"
      summary: "Summary"
      description: ""
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
              - icon: "https://storage.googleapis.com/investabit-index/symbols/btc.svg"
                name: "Bitcoin"
                slug: "btc"
                added: 1483228800
                color:
                  b: 73
                  g: 163
                  r: 230
                trend:
                - interval: "24:00:00"
                  time_end: 1578355200
                  change_pct: 0.88
                  change_usd: 64.97
                  time_start: 1578268800
                  weighted_price: 7429.57
                price_btc: 1
                price_usd: 7599.5017168
                market_cap: 1.378949497207858E11
                volume_usd: 2.18714406079213E10
                change_pct: 1.23
                symbol_name: "bitcoin"
                market_data_time: 1578342816
              - icon: "https://storage.googleapis.com/investabit-index/symbols/eos.svg"
                name: "EOS"
                slug: "eos"
                added: 1501545600
                color:
                  b: 44
                  g: 44
                  r: 44
                trend:
                - interval: "24:00:00"
                  time_end: 1578355200
                  change_pct: 0.51
                  change_usd: 0.01
                  time_start: 1578268800
                  weighted_price: 2.7
                price_btc: 3.736517737830955E-4
                price_usd: 2.83956729635
                market_cap: 2.690665353338475E9
                volume_usd: 2.28319682234393E9
                change_pct: 1.46
                symbol_name: "eos"
                market_data_time: 1578342846
              - icon: "https://storage.googleapis.com/investabit-index/symbols/eth.svg"
                name: "Ethereum"
                slug: "eth"
                added: 1483228800
                color:
                  b: 41
                  g: 40
                  r: 39
                trend:
                - interval: "24:00:00"
                  time_end: 1578355200
                  change_pct: -0.37
                  change_usd: -0.5
                  time_start: 1578268800
                  weighted_price: 135.06
                price_btc: 0.018781249570675798
                price_usd: 142.728138356
                market_cap: 1.5581445781468378E10
                volume_usd: 8.84993383463866E9
                change_pct: 1.59
                symbol_name: "ethereum"
                market_data_time: 1578342860
              - icon: "https://storage.googleapis.com/investabit-index/symbols/ltc.svg"
                name: "Litecoin"
                slug: "ltc"
                added: 1483228800
                color:
                  b: 169
                  g: 169
                  r: 169
                trend:
                - interval: "24:00:00"
                  time_end: 1578355200
                  change_pct: 0.27
                  change_usd: 0.12
                  time_start: 1578268800
                  weighted_price: 43.46
                price_btc: 0.00599114379807939
                price_usd: 45.5297075791
                market_cap: 2.904786549636796E9
                volume_usd: 3.26774812808392E9
                change_pct: 0.79
                symbol_name: "litecoin"
                market_data_time: 1578342844
              - icon: "https://storage.googleapis.com/investabit-index/symbols/xrp.svg"
                name: "Ripple"
                slug: "xrp"
                added: 1483228800
                color:
                  b: 0
                  g: 0
                  r: 0
                trend:
                - interval: "24:00:00"
                  time_end: 1578355200
                  change_pct: -0.84
                  change_usd: -0.0016
                  time_start: 1578268800
                  weighted_price: 0.193
                price_btc: 2.9267865211912494E-5
                price_usd: 0.222421191925
                market_cap: 9.645570481162577E9
                volume_usd: 2.14957867271926E9
                change_pct: 0.46
                symbol_name: "ripple"
                market_data_time: 1578342842
          headers: {}
          schema:
            $ref: "#/definitions/Public Summary Response"
        "400":
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
  /v1/private/forecast/{symbol}/{interval}:
    get:
      tags:
      - "Private"
      summary: "Forecast"
      description: "The forecast response contains a sequence of forecasts at the\
        \ specified intervals, with the following attributes.\n\n+ `time_start` start\
        \ time of the period the forecast is applicable for\n\n+ `time_end` end time\
        \ of the period the forecast is applicable for\n\n+ `low` forecasted high\
        \ during the period\n\n+ `high` forecasted low during the period\n\n+ `weighted_price`\
        \ forecasted weighted price during the period\n\n+ `change_pct` percent change\
        \ in price for forecasted weighted_price relative to current price\n\n+ `change_usd`\
        \ dollar change in price for forecasted weighted_price relative to current\
        \ price"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      - name: "interval"
        in: "path"
        description: "The forecast interval, 1h or 1d."
        required: true
        type: "string"
        x-example: "1h"
        x-exportParamName: "Interval"
      - name: "Cookie"
        in: "header"
        description: "e.g. csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "Cookie"
        x-optionalDataType: "String"
      - name: "X-csrf"
        in: "header"
        description: "e.g. b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "XCsrf"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                forecast:
                - time_start: 1568764800
                  time_end: 1568851200
                  low: 9971.28
                  high: 10334.27
                  change_pct: -1
                  change_usd: -102.89
                  confidence: 1
                  weighted_price: 10188.11
                - time_start: 1568851200
                  time_end: 1568937600
                  low: 9940.24
                  high: 10233.11
                  change_pct: -1.37
                  change_usd: -140.55
                  confidence: 1
                  weighted_price: 10150.45
                - time_start: 1568937600
                  time_end: 1569024000
                  low: 9917.6
                  high: 10196.93
                  change_pct: -1.15
                  change_usd: -118.52
                  confidence: 1
                  weighted_price: 10172.48
                - time_start: 1569024000
                  time_end: 1569110400
                  low: 9809.59
                  high: 10342.96
                  change_pct: -1.55
                  change_usd: -159.55
                  confidence: 1
                  weighted_price: 10131.45
                - time_start: 1569110400
                  time_end: 1569196800
                  low: 9901.2
                  high: 10598.11
                  change_pct: -1.56
                  change_usd: -160.13
                  confidence: 1
                  weighted_price: 10130.87
                - time_start: 1569196800
                  time_end: 1569283200
                  low: 10092.33
                  high: 10431.12
                  change_pct: -0.26
                  change_usd: -27.18
                  confidence: 1
                  weighted_price: 10263.82
                - time_start: 1569283200
                  time_end: 1569369600
                  low: 9933.06
                  high: 10520.33
                  change_pct: 0.96
                  change_usd: 98.49
                  confidence: 1
                  weighted_price: 10389.49
          headers: {}
          schema:
            $ref: "#/definitions/Private Forecast Response"
        "400":
          description: "Bad Request"
          examples: {}
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
      security:
      - oauth2: []
  /v1/private/trend/{symbol}:
    get:
      tags:
      - "Private"
      summary: "Trend"
      description: "The trend response contains a collection of forecasts for different\
        \ intervals with the following attributes.\n\n+ `time_start` start time of\
        \ the period the forecast is applicable for\n\n+ `time_end` end time of the\
        \ period the forecast is applicable for\n\n+ `interval` interval in hours\
        \ that the forecast is applicable for\n\n+ `weighted_price` forecasted weighted\
        \ price during the period\n\n+ `change_pct` percent change in price for forecasted\
        \ weighted_price relative to current price\n\n+ `change_usd` dollar change\
        \ in price for forecasted weighted_price relative to current price"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      - name: "Cookie"
        in: "header"
        description: "e.g. csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "Cookie"
        x-optionalDataType: "String"
      - name: "X-csrf"
        in: "header"
        description: "e.g. b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "XCsrf"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                trend:
                - time_start: 1568822400
                  time_end: 1568836800
                  interval: "04:00:00"
                  change_pct: 0.17
                  change_usd: 17.85
                  weighted_price: 10222.83
                - time_start: 1568764800
                  time_end: 1568851200
                  interval: "24:00:00"
                  change_pct: 0.46
                  change_usd: 46.58
                  weighted_price: 10266.58
                - time_start: 1568764800
                  time_end: 1569024000
                  interval: "72:00:00"
                  change_pct: -0.49
                  change_usd: -49.66
                  weighted_price: 10170.34
                - time_start: 1568764800
                  time_end: 1569369600
                  interval: "168:00:00"
                  change_pct: -0.16
                  change_usd: -16.19
                  weighted_price: 10203.81
          headers: {}
          schema:
            $ref: "#/definitions/Public Trend Response"
        "400":
          description: "Bad Request"
          examples: {}
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
      security:
      - oauth2: []
  /v1/private/trend-tabular:
    get:
      tags:
      - "Private"
      summary: "Trend Tabular"
      description: "The trend tabular response contains a collection of forecasts\
        \ for all supported cryptocurrencies at different intervals with the following\
        \ attributes.\n\n+ `time_start` start time of the period the forecast is applicable\
        \ for\n\n+ `time_end` end time of the period the forecast is applicable for\n\
        \n+ `interval` interval in hours that the forecast is applicable for\n\n+\
        \ `weighted_price` forecasted weighted price during the period\n\n+ `change_pct`\
        \ percent change in price for forecasted weighted_price relative to current\
        \ price\n\n+ `change_usd` dollar change in price for forecasted weighted_price\
        \ relative to current price"
      produces:
      - "application/json"
      parameters:
      - name: "Cookie"
        in: "header"
        description: "e.g. csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "Cookie"
        x-optionalDataType: "String"
      - name: "X-csrf"
        in: "header"
        description: "e.g. b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "XCsrf"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                trend_tabular:
                - symbol: "btc"
                  name: "Bitcoin"
                  trend:
                  - time_start: 1568822400
                    time_end: 1568836800
                    interval: "04:00:00"
                    change_pct: 0.17
                    change_usd: 17.85
                    weighted_price: 10222.83
                  - time_start: 1568764800
                    time_end: 1568851200
                    interval: "24:00:00"
                    change_pct: 0.46
                    change_usd: 46.58
                    weighted_price: 10266.58
                  - time_start: 1568764800
                    time_end: 1569024000
                    interval: "72:00:00"
                    change_pct: -0.49
                    change_usd: -49.66
                    weighted_price: 10170.34
                  - time_start: 1568764800
                    time_end: 1569369600
                    interval: "168:00:00"
                    change_pct: -0.16
                    change_usd: -16.19
                    weighted_price: 10203.81
          headers: {}
          schema:
            $ref: "#/definitions/Private Trend Tabular Response"
        "400":
          description: "Bad Request"
          examples: {}
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
      security:
      - oauth2: []
  /v1/private/forecast-time/{symbol}/{interval}/{period}:
    get:
      tags:
      - "Private"
      summary: "Forecast Time"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      - name: "interval"
        in: "path"
        description: "The forecast interval, 1h or 1d."
        required: true
        type: "string"
        x-example: "1h"
        x-exportParamName: "Interval"
      - name: "period"
        in: "path"
        description: "The period for computing the error bounds, typically 7d or 30d."
        required: true
        type: "string"
        x-example: "7d"
        x-exportParamName: "Period"
      - name: "Cookie"
        in: "header"
        description: "e.g. csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "Cookie"
        x-optionalDataType: "String"
      - name: "X-csrf"
        in: "header"
        description: "e.g. b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "XCsrf"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                forecast_time: 1568822400
          headers: {}
          schema:
            $ref: "#/definitions/Private Forecast Time Response"
        "400":
          description: "Bad Request"
          examples: {}
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
      security:
      - oauth2: []
  /v1/private/accuracy/{symbol}/{interval}/{period}:
    get:
      tags:
      - "Private"
      summary: "Accuracy"
      description: "The accuracy response contains the following attributes.\n\n+\
        \ `rmse` Root Mean Square Error\n\n+ `mae` Mean Absolute error\n\n+ `r2` R\
        \ Squared\n\n+ `ci` Confidence Interval lower and upper error bounds"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      - name: "interval"
        in: "path"
        description: "The forecast interval, 1h or 1d."
        required: true
        type: "string"
        x-example: "1h"
        x-exportParamName: "Interval"
      - name: "period"
        in: "path"
        description: "The period for computing the accuracy, such as the past 7 days."
        required: true
        type: "string"
        x-example: "7d"
        x-exportParamName: "Period"
      - name: "Cookie"
        in: "header"
        description: "e.g. csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "csrf=b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "Cookie"
        x-optionalDataType: "String"
      - name: "X-csrf"
        in: "header"
        description: "e.g. b1820141-1bad-4a9c-93c0-52022817ce89"
        required: false
        type: "string"
        x-example: "b1820141-1bad-4a9c-93c0-52022817ce89"
        x-exportParamName: "XCsrf"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                rmse: 0.55
                mae: 0.32
                r2: 0.99
                ci:
                - 0.26
                - 0.38
          headers: {}
          schema:
            $ref: "#/definitions/Private Accuracy Response"
        "400":
          description: "Bad Request"
          examples: {}
          headers: {}
          schema:
            $ref: "#/definitions/Default Response"
      security:
      - oauth2: []
securityDefinitions:
  oauth2:
    type: "oauth2"
    authorizationUrl: ""
    tokenUrl: ""
    flow: "accessCode"
    scopes: {}
definitions:
  Symbols Route: {}
  Price Current Route: {}
  Price Change Route: {}
  Price History Route: {}
  Trend Route: {}
  Summary Route: {}
  Forecast Route: {}
  Trend Tabluar Route: {}
  Forecast Time Route: {}
  Accuracy Route: {}
  Public Symbols Response_data_symbols:
    type: "object"
    required:
    - "name"
    - "symbol"
    properties:
      name:
        type: "string"
      symbol:
        type: "string"
  Public Symbols Response_data:
    type: "object"
    required:
    - "symbols"
    properties:
      symbols:
        type: "array"
        items:
          $ref: "#/definitions/Public Symbols Response_data_symbols"
  Public Symbols Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Symbols Response_data"
      errors:
        type: "array"
        items: {}
  Public Price Current Response_data_current:
    type: "object"
    required:
    - "change_pct"
    - "change_usd"
    - "name"
    - "price"
    - "symbol"
    properties:
      symbol:
        type: "string"
      name:
        type: "string"
      price:
        type: "number"
      change_usd:
        type: "number"
      change_pct:
        type: "number"
  Public Price Current Response_data:
    type: "object"
    required:
    - "current"
    properties:
      current:
        type: "array"
        items:
          $ref: "#/definitions/Public Price Current Response_data_current"
  Public Price Current Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Price Current Response_data"
      errors:
        type: "array"
        items: {}
  Default Response:
    type: "object"
    required:
    - "code"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      errors:
        type: "array"
        items: {}
  Public Price Change Response_data_price_change:
    type: "object"
    required:
    - "change_pct"
    - "change_usd"
    - "interval"
    properties:
      interval:
        type: "string"
      change_usd:
        type: "number"
      change_pct:
        type: "number"
  Public Price Change Response_data:
    type: "object"
    required:
    - "price_change"
    properties:
      price_change:
        type: "array"
        items:
          $ref: "#/definitions/Public Price Change Response_data_price_change"
  Public Price Change Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Price Change Response_data"
      errors:
        type: "array"
        items: {}
  Public Price History Response_data_history:
    type: "object"
    required:
    - "price"
    - "time"
    properties:
      time:
        type: "number"
      price:
        type: "number"
  Public Price History Response_data_price_history:
    type: "object"
    required:
    - "history"
    - "name"
    - "symbol"
    properties:
      symbol:
        type: "string"
      name:
        type: "string"
      history:
        type: "array"
        items:
          $ref: "#/definitions/Public Price History Response_data_history"
  Public Price History Response_data:
    type: "object"
    required:
    - "price_history"
    properties:
      price_history:
        type: "array"
        items:
          $ref: "#/definitions/Public Price History Response_data_price_history"
  Public Price History Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Price History Response_data"
      errors:
        type: "array"
        items: {}
  Public Trend Response_data_trend:
    type: "object"
    required:
    - "change_pct"
    - "change_usd"
    - "confidence"
    - "interval"
    - "time_end"
    - "time_start"
    - "weighted_price"
    properties:
      time_start:
        type: "number"
      time_end:
        type: "number"
      interval:
        type: "string"
      weighted_price:
        type: "number"
      change_usd:
        type: "number"
      change_pct:
        type: "number"
      confidence:
        type: "number"
  Public Trend Response_data:
    type: "object"
    required:
    - "trend"
    properties:
      trend:
        type: "array"
        items:
          $ref: "#/definitions/Public Trend Response_data_trend"
  Public Trend Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Trend Response_data"
      errors:
        type: "array"
        items: {}
  Public Summary Response_color:
    type: "object"
    required:
    - "b"
    - "g"
    - "r"
    properties:
      b:
        type: "number"
      g:
        type: "number"
      r:
        type: "number"
  Public Summary Response_data:
    type: "object"
    required:
    - "added"
    - "change_pct"
    - "color"
    - "icon"
    - "market_cap"
    - "market_data_time"
    - "name"
    - "price_btc"
    - "price_usd"
    - "slug"
    - "symbol_name"
    - "trend"
    - "volume_usd"
    properties:
      icon:
        type: "string"
      name:
        type: "string"
      symbol_name:
        type: "string"
      slug:
        type: "string"
      added:
        type: "number"
      color:
        $ref: "#/definitions/Public Summary Response_color"
      price_btc:
        type: "number"
      price_usd:
        type: "number"
      market_cap:
        type: "number"
      volume_usd:
        type: "number"
      change_pct:
        type: "number"
      market_data_time:
        type: "number"
      trend:
        type: "array"
        items:
          $ref: "#/definitions/Public Trend Response_data_trend"
  Public Summary Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Public Summary Response_data"
      errors:
        type: "array"
        items: {}
  Private Forecast Response_data_forecast:
    type: "object"
    required:
    - "change_pct"
    - "change_usd"
    - "confidence"
    - "high"
    - "low"
    - "time_end"
    - "time_start"
    - "weighted_price"
    properties:
      time_start:
        type: "number"
      time_end:
        type: "number"
      low:
        type: "number"
      weighted_price:
        type: "number"
      high:
        type: "number"
      confidence:
        type: "number"
      change_usd:
        type: "number"
      change_pct:
        type: "number"
  Private Forecast Response_data:
    type: "object"
    required:
    - "forecast"
    properties:
      forecast:
        type: "array"
        items:
          $ref: "#/definitions/Private Forecast Response_data_forecast"
  Private Forecast Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Private Forecast Response_data"
      errors:
        type: "array"
        items: {}
  Private Trend Tabular Response_data_trend_tabular:
    type: "object"
    required:
    - "name"
    - "symbol"
    - "trend"
    properties:
      symbol:
        type: "string"
      name:
        type: "string"
      trend:
        type: "array"
        items:
          $ref: "#/definitions/Public Trend Response_data_trend"
  Private Trend Tabular Response_data:
    type: "object"
    required:
    - "trend_tabular"
    properties:
      trend_tabular:
        type: "array"
        items:
          $ref: "#/definitions/Private Trend Tabular Response_data_trend_tabular"
  Private Trend Tabular Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Private Trend Tabular Response_data"
      errors:
        type: "array"
        items: {}
  Private Forecast Time Response_data:
    type: "object"
    required:
    - "forecast_time"
    properties:
      forecast_time:
        type: "number"
  Private Forecast Time Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Private Forecast Time Response_data"
      errors:
        type: "array"
        items: {}
  Private Accuracy Response_data:
    type: "object"
    required:
    - "ci"
    - "mae"
    - "r2"
    - "rmse"
    properties:
      rmse:
        type: "number"
      mae:
        type: "number"
      r2:
        type: "number"
      ci:
        type: "array"
        items:
          type: "number"
  Private Accuracy Response:
    type: "object"
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Private Accuracy Response_data"
      errors:
        type: "array"
        items: {}
