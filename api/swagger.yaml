---
swagger: "2.0"
info:
  description: "The Investabit API allows for access to all of the public facing services\
    \ provided, including market data and forecasts.\n\n## General Overview\n\n1.\
    \ All API methods will be built to adhere to RESTful best practices as closely\
    \ as possible. As such, all API calls will be made via the standard HTTP protocol\
    \ using the GET/POST/PUT/DELETE request types.\n\n2. Every request returns the\
    \ status as a JSON response with the following\n  - success, true if it was successful\n\
    \  - code, the http status code (also in the response header)\n\n        200 if\
    \ response is successful\n\n        400 if bad request\n\n        401 if authorization\
    \ JWT is wrong or limit exceeded\n\n        404 wrong route\n\n        500 for\
    \ any internal errors\n\n- status, the status of the request, default **success**\n\
    \n- errors, an array of any relevant error details\n\n3. For any requests that\
    \ are not successful an error message is specified and returned as an array for\
    \ the **errors** key in the JSON response.\n\n4. All authentication uses JSON\
    \ Web Tokens (JWT), which is set as the **Authorization** entry in the header,\
    \ see the following for more details.\n    * http://jwt.io\n    * https://scotch.io/tutorials/the-anatomy-of-a-json-web-token"
  version: ""
  title: "Investabit"
host: "api.investabit.com"
basePath: "/"
tags:
- name: "Public"
schemes:
- "https"
paths:
  /v1/public/symbols:
    get:
      tags:
      - "Public"
      summary: "Symbols"
      description: ""
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                symbols:
                - symbol: "btc"
                  name: "Bitcoin"
                - symbol: "eth"
                  name: "Ethereum"
                - symbol: "ltc"
                  name: "Litecoin"
                - symbol: "eos"
                  name: "EOS"
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "data"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              data:
                $ref: "#/definitions/Public Symbols Response_data"
              errors:
                type: "array"
                items: {}
            title: "Public Symbols Response"
  /v1/public/price-current/{symbol}:
    get:
      tags:
      - "Public"
      summary: "Price Current"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol, provide `all` to get every symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                current:
                - symbol: "btc"
                  name: "Bitcoin"
                  price: 6621.12
                  change_usd: -320.05
                  change_pct: -5.23
                - symbol: "eth"
                  name: "Ethereum"
                  price: 221.12
                  change_usd: -30.05
                  change_pct: -2.23
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "data"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              data:
                $ref: "#/definitions/Public Price Current Response_data"
              errors:
                type: "array"
                items: {}
            title: "Public Price Current Response"
        400:
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              errors:
                type: "array"
                items: {}
            title: "Default Response"
  /v1/public/price-change/{symbol}:
    get:
      tags:
      - "Public"
      summary: "Price Change"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                price_change:
                - interval: "01:00:00"
                  change_pct: -0.15
                  change_usd: -15
                - interval: "04:00:00"
                  change_pct: 0.61
                  change_usd: 60.9
                - interval: "24:00:00"
                  change_pct: 4.07
                  change_usd: 392
                - interval: "72:00:00"
                  change_pct: 5.02
                  change_usd: 479.05
                - interval: "168:00:00"
                  change_pct: 4.06
                  change_usd: 391.1
                - interval: "720:00:00"
                  change_pct: -3.17
                  change_usd: -328
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "data"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              data:
                $ref: "#/definitions/Public Price Change Response_data"
              errors:
                type: "array"
                items: {}
            title: "Public Price Change Response"
        400:
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              errors:
                type: "array"
                items: {}
            title: "Default Response"
  /v1/public/price-history/{symbol}/{period}/{interval}:
    get:
      tags:
      - "Public"
      summary: "Price History"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol, provide `all` to get every symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      - name: "period"
        in: "path"
        description: "The period to get data for, such as past 30 days."
        required: true
        type: "string"
        x-example: "30d"
        x-exportParamName: "Period"
      - name: "interval"
        in: "path"
        description: "The bar interval, such as 1 day."
        required: true
        type: "string"
        x-example: "1d"
        x-exportParamName: "Interval"
      responses:
        200:
          description: "OK"
          examples: {}
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "data"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              data:
                $ref: "#/definitions/Public Price History Response_data"
              errors:
                type: "array"
                items: {}
            title: "Public Price History Response"
        400:
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              errors:
                type: "array"
                items: {}
            title: "Default Response"
  /v1/public/trend/{symbol}:
    get:
      tags:
      - "Public"
      summary: "Trend"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "The cryptocurrency symbol."
        required: true
        type: "string"
        x-example: "btc"
        x-exportParamName: "Symbol"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              success: true
              code: 200
              status: "success"
              data:
                trend:
                - time_start: 1568822400
                  time_end: 1568826000
                  interval: "01:00:00"
                  change_pct: -0.11
                  change_usd: -11.34
                  weighted_price: 10193.64
                - time_start: 1568822400
                  time_end: 1568836800
                  interval: "04:00:00"
                  change_pct: 0.17
                  change_usd: 17.85
                  weighted_price: 10222.83
                - time_start: 1568808000
                  time_end: 1568851200
                  interval: "12:00:00"
                  change_pct: -0.36
                  change_usd: -36.19
                  weighted_price: 10148.81
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "data"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              data:
                $ref: "#/definitions/Public Trend Response_data"
              errors:
                type: "array"
                items: {}
            title: "Public Trend Response"
        400:
          description: "Bad Request"
          examples:
            application/json:
              success: false
              code: 400
              status: "invalid_symbol"
              errors:
              - "Invalid symbol, cryptocurrency not found."
          headers: {}
          schema:
            type: "object"
            required:
            - "code"
            - "status"
            - "success"
            properties:
              success:
                type: "boolean"
              code:
                type: "integer"
              status:
                type: "string"
              errors:
                type: "array"
                items: {}
            title: "Default Response"
securityDefinitions: {}
definitions:
  Symbols Route: {}
  Price Current Route: {}
  Price Change Route: {}
  Price History Route: {}
  Trend Route: {}
  Public Symbols Response_data_symbols:
    required:
    - "name"
    - "symbol"
    properties:
      name:
        type: "string"
      symbol:
        type: "string"
  Public Symbols Response_data:
    required:
    - "symbols"
    properties:
      symbols:
        type: "array"
        items:
          $ref: "#/definitions/Public Symbols Response_data_symbols"
  Public Symbols Response:
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Symbols Response_data"
      errors:
        type: "array"
        items: {}
  Public Price Current Response_data_current:
    required:
    - "change_pct"
    - "change_usd"
    - "name"
    - "price"
    - "symbol"
    properties:
      symbol:
        type: "string"
      name:
        type: "string"
      price:
        type: "number"
      change_usd:
        type: "number"
      change_pct:
        type: "number"
  Public Price Current Response_data:
    required:
    - "current"
    properties:
      current:
        type: "array"
        items:
          $ref: "#/definitions/Public Price Current Response_data_current"
  Public Price Current Response:
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Price Current Response_data"
      errors:
        type: "array"
        items: {}
  Default Response:
    required:
    - "code"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      errors:
        type: "array"
        items: {}
  Public Price Change Response_data_price_change:
    required:
    - "change_pct"
    - "change_usd"
    - "interval"
    properties:
      interval:
        type: "string"
      change_usd:
        type: "number"
      change_pct:
        type: "number"
  Public Price Change Response_data:
    required:
    - "price_change"
    properties:
      price_change:
        type: "array"
        items:
          $ref: "#/definitions/Public Price Change Response_data_price_change"
  Public Price Change Response:
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Price Change Response_data"
      errors:
        type: "array"
        items: {}
  Public Price History Response_data_history:
    required:
    - "price"
    - "time"
    properties:
      time:
        type: "number"
      price:
        type: "number"
  Public Price History Response_data_price_history:
    required:
    - "history"
    - "name"
    - "symbol"
    properties:
      symbol:
        type: "string"
      name:
        type: "string"
      history:
        type: "array"
        items:
          $ref: "#/definitions/Public Price History Response_data_history"
  Public Price History Response_data:
    required:
    - "price_history"
    properties:
      price_history:
        type: "array"
        items:
          $ref: "#/definitions/Public Price History Response_data_price_history"
  Public Price History Response:
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Price History Response_data"
      errors:
        type: "array"
        items: {}
  Public Trend Response_data_trend:
    required:
    - "change_pct"
    - "change_usd"
    - "confidence"
    - "interval"
    - "time_end"
    - "time_start"
    - "weighted_price"
    properties:
      time_start:
        type: "number"
      time_end:
        type: "number"
      interval:
        type: "string"
      weighted_price:
        type: "number"
      change_usd:
        type: "number"
      change_pct:
        type: "number"
      confidence:
        type: "number"
  Public Trend Response_data:
    required:
    - "trend"
    properties:
      trend:
        type: "array"
        items:
          $ref: "#/definitions/Public Trend Response_data_trend"
  Public Trend Response:
    required:
    - "code"
    - "data"
    - "status"
    - "success"
    properties:
      success:
        type: "boolean"
      code:
        type: "integer"
      status:
        type: "string"
      data:
        $ref: "#/definitions/Public Trend Response_data"
      errors:
        type: "array"
        items: {}
